{"id":1,"user_id":2,"name":"BadgeApp","description":"Badge Application for Linux Foundation CII","project_homepage_url":"https://github.com/linuxfoundation/cii-best-practices-badge","repo_url":"https://github.com/linuxfoundation/cii-best-practices-badge","license":"MIT","project_homepage_url_status":"?","project_homepage_url_justification":null,"project_homepage_https_status":"?","project_homepage_https_justification":null,"description_sufficient_status":"Met","description_sufficient_justification":"https://github.com/linuxfoundation/cii-best-practices-badge","interact_status":"Met","interact_justification":"https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md","contribution_status":"Met","contribution_justification":"https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md","contribution_criteria_status":"Met","contribution_criteria_justification":"https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md","license_location_status":"Met","license_location_justification":"It's in the LICENSE file in the top level directory.  See: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/LICENSE","oss_license_status":"Met","oss_license_justification":"The MIT license is widely acknowledged as being OSS.  The license is at https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/LICENSE","oss_license_osi_status":"Met","oss_license_osi_justification":"","documentation_basics_status":"Met","documentation_basics_justification":"The directory \"doc\" contains most documentaiton. Installation information is at https://github.com/linuxfoundation/cii-best-practices-badge/tree/master/doc/INSTALL.md and other materials are at https://github.com/linuxfoundation/cii-best-practices-badge/tree/master/doc/","documentation_interface_status":"?","documentation_interface_justification":"","repo_url_status":"Met","repo_url_justification":"It uses git, URL is https://github.com/linuxfoundation/cii-best-practices-badge","repo_track_status":"Met","repo_track_justification":"Uses git to track this.","repo_interim_status":"Met","repo_interim_justification":"Interim versions are put on git, not just final versions.","repo_distributed_status":"Met","repo_distributed_justification":"Uses git.","version_unique_status":"Met","version_unique_justification":"The primary single user uses git commit records to identify releases.","version_semver_status":"Unmet","version_semver_justification":"There's really only one expected final user, the Linux Foundation site.  The code is deployed there using git.  Therefore, git commit id's are enough for that purpose.  That said, major changes *are* recorded using Semantic Versioning (SemVer).","version_tags_status":"Unmet","version_tags_justification":"Git commit id's are used, since there's realy only 1 primary user the need for a clearly-discussed version number is less important.","changelog_status":"Met","changelog_justification":"CHANGELOG file is in top directory, see: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CHANGELOG.md","changelog_vulns_status":"Met","changelog_vulns_justification":"We intend to do that, though we have not had any need to do that yet.","report_url_status":"?","report_url_justification":null,"report_tracker_status":"Met","report_tracker_justification":"Yes, GitHub issue tracker.","report_process_status":"Met","report_process_justification":"Yes, either GitHub issue tracker or mailing list.  See: https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/README.md","report_responses_status":"Met","report_responses_justification":"Yes.  Not many have been submitted so far, but we've responded.","enhancement_responses_status":"Unmet","enhancement_responses_justification":"The project hasn't been around very long, so we haven't had a chance to respond to most enhancement requests.","report_archive_status":"Met","report_archive_justification":"Yes, via GitHub isue tracker: https://github.com/linuxfoundation/cii-best-practices-badge/issues","vulnerability_report_process_status":"Met","vulnerability_report_process_justification":"https://github.com/linuxfoundation/cii-best-practices-badge/issues","vulnerability_report_private_status":"Met","vulnerability_report_private_justification":"https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md","vulnerability_report_response_status":"Met","vulnerability_report_response_justification":"No external reports so far, so this is vacuously true.","build_status":"?","build_justification":"","build_common_tools_status":"?","build_common_tools_justification":"","build_oss_tools_status":"?","build_oss_tools_justification":"","test_status":"Met","test_justification":"Yes, it includes a test suite based on minitest (the test framework that comes with Rails).","test_invocation_status":"Met","test_invocation_justification":"Yes. \"rake test\" invokes the automated test suite. The default \"rake\" command includes \"rake test\".","test_most_status":"Met","test_most_justification":"Met.  Currently coverage of the ruby code is over 90%, and most of the code is in Ruby.","test_policy_status":"Met","test_policy_justification":"Yes.  The CONTRIBUTING file at \u003chttps://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md\u003e says,  \"When adding or changing functionality, please include new tests for them as part of your contribution\". Also, the project home page shows the test coverage, which encourages adding tests as new functionality is added.","tests_are_added_status":"Met","tests_are_added_justification":"Tests are added as new functionality is added.","tests_documented_added_status":"Met","tests_documented_added_justification":"Yes.  The CONTRIBUTING file at \u003chttps://github.com/linuxfoundation/cii-best-practices-badge/blob/master/CONTRIBUTING.md\u003e says,  \"When adding or changing functionality, please include new tests for them as part of your contribution\".","warnings_status":"Met","warnings_justification":"Uses rubocop and rails_best_practices to check for code quality errors in Ruby code.  JSCS is used to look for problems in Javascript.  The markdown documentation is scanned with markdownlink.","warnings_fixed_status":"Met","warnings_fixed_justification":"In general warnings are addressed.  In some cases warnings are disabled for specific cases.","warnings_strict_status":"Met","warnings_strict_justification":"The settings for the warning tools are generally fairly strict.","know_secure_design_status":"Met","know_secure_design_justification":"David A. Wheeler, lead developer, literally wrote the code on how to design secure software: http://www.dwheeler.com/secure-programs","know_common_errors_status":"?","know_common_errors_justification":"","crypto_published_status":"?","crypto_published_justification":"","crypto_call_status":"?","crypto_call_justification":"","crypto_oss_status":"?","crypto_oss_justification":"","crypto_keylength_status":"?","crypto_keylength_justification":"","crypto_working_status":"?","crypto_working_justification":"","crypto_pfs_status":"?","crypto_pfs_justification":"","crypto_password_storage_status":"?","crypto_password_storage_justification":"","crypto_random_status":"?","crypto_random_justification":"","delivery_mitm_status":"Met","delivery_mitm_justification":"Uses https.","delivery_unsigned_status":"Met","delivery_unsigned_justification":"Does not make this mistake.","vulnerabilities_fixed_60_days_status":"Met","vulnerabilities_fixed_60_days_justification":"No such vulnerabilities at this time.","vulnerabilities_critical_fixed_status":"Met","vulnerabilities_critical_fixed_justification":"No such vulnerabilities at this time.","static_analysis_status":"?","static_analysis_justification":"","static_analysis_common_vulnerabilities_status":"?","static_analysis_common_vulnerabilities_justification":"","static_analysis_fixed_status":"?","static_analysis_fixed_justification":"","static_analysis_often_status":"?","static_analysis_often_justification":"","dynamic_analysis_status":"?","dynamic_analysis_justification":"","dynamic_analysis_unsafe_status":"?","dynamic_analysis_unsafe_justification":"","dynamic_analysis_enable_assertions_status":"?","dynamic_analysis_enable_assertions_justification":"","dynamic_analysis_fixed_status":"?","dynamic_analysis_fixed_justification":"","general_comments":"","created_at":"2015-10-23T22:02:10.544Z","updated_at":"2015-11-26T01:09:12.484Z","crypto_weaknesses_status":"?","crypto_weaknesses_justification":"","crypto_alternatives_status":"?","crypto_alternatives_justification":"","test_continuous_integration_status":"Met","test_continuous_integration_justification":"Code is frequently integrated back into GitHub; CircleCI and several other tools are then run on the result to determine if there's a problem.  If a problem is found, the tools provide feedback via GitHub."}